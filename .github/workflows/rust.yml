name: Rust

on:
  release:
    types: [created]
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_linux_x86_64:
    runs-on: [self-hosted, linux, X64]

    steps:
    - uses: actions/checkout@v4

    - name: Release
      run: rustup default stable && cargo build --release

    - name: Release-mips
      run: rustup install nightly-2024-05-01 && rustup default nightly-2024-05-01 && cross build --target mips-unknown-linux-musl --release -Z build-std

    - name: Move Binary (on success)
      run: |
        mkdir -p releases/linux_x86_64
        mv target/release/moblink-rust-relay releases/linux_x86_64/moblink-rust-relay
        mv target/mips-unknown-linux-musl/release/moblink-rust-relay releases/linux_mips_musl/moblink-rust-relay

    - name: Upload X86_64 Binary
      uses: actions/upload-artifact@v4
      with:
        name: moblink-rust-relay-linux_x86_64
        path: releases/linux_x86_64/moblink-rust-relay
        retention-days: 1  # Store the artifact temporarily

    - name: Upload X86_64 Binary
      uses: actions/upload-artifact@v4
      with:
        name: moblink-rust-relay-linux_mips_musl
        path: releases/linux_mips_musl/moblink-rust-relay
        retention-days: 1  # Store the artifact temporarily

  build_linux_arm64:
    runs-on: [self-hosted, linux, ARM64]

    steps:
    - uses: actions/checkout@v4

    - name: Release
      run: rustup default stable && cargo build --release

    - name: Move Binary (on success)
      run: |
        mkdir -p releases/linux_arm64
        mv target/release/moblink-rust-relay releases/linux_arm64/moblink-rust-relay

    - name: Upload ARM64 Binary
      uses: actions/upload-artifact@v4
      with:
        name: moblink-rust-relay-linux_arm64
        path: releases/linux_arm64/moblink-rust-relay
        retention-days: 1  # Store the artifact temporarily

  commit_and_push:
    needs: [build_linux_x86_64, build_linux_arm64]  # Ensure this runs after both builds
    runs-on: [self-hosted, linux, X64]  # Can be any runner

    steps:
    - uses: actions/checkout@v4

    - name: Download X86_64 Binary
      uses: actions/download-artifact@v4
      with:
        name: moblink-rust-relay-linux_x86_64
        path: releases/linux_x86_64

    - name: Download linux_mips_musl Binary
      uses: actions/download-artifact@v4
      with:
        name: moblink-rust-relay-linux_mips_musl
        path: releases/linux_mips_musl

    - name: Download ARM64 Binary
      uses: actions/download-artifact@v4
      with:
        name: moblink-rust-relay-linux_arm64
        path: releases/linux_arm64

    - name: Commit and Push Both Binaries
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add releases/linux_x86_64/moblink-rust-relay releases/linux_arm64/moblink-rust-relay releases/linux_mips_musl/moblink-rust-relay
        git commit -m "Update binaries for latest release" || echo "No changes to commit"
        git push origin HEAD:${{ github.ref_name }}
